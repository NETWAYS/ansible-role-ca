---

- name: Ensure CA directory exists
  file:
    path: "{{ ca_ca_dir }}"
    owner: root
    group: root
    mode: 0700
    state: directory

- name: Ensure local directory on Ansible host exists
  file:
    path: "{{ ca_localdir }}"
    state: directory
    mode: 0700
  become: "{{ ca_local_become }}"
  delegate_to: localhost

- name: Install openssl
  package:
    name: openssl
  when: ca_manage_openssl | bool

- name: Set up ca
  import_tasks: ca.yml
  when: ca_ca_host == inventory_hostname

### client certificate ###

- name: Create key
  openssl_privatekey:
    path: "{{ ca_ca_dir }}/{{ inventory_hostname }}.key"
    passphrase: "{{ ca_keypassphrase }}"
    cipher: "{{ ca_openssl_cipher }}"

- name: Create CSR
  openssl_csr:
    path: "{{ ca_ca_dir }}/{{ inventory_hostname }}.csr"
    privatekey_path: "{{ ca_ca_dir }}/{{ inventory_hostname }}.key"
    privatekey_passphrase: "{{ ca_keypassphrase }}"
    country_name: "{{ ca_country }}"
    organization_name: "{{ ca_organization }}"
    common_name: "{{ inventory_hostname }}"
    subject_alt_name: "DNS:{{ ansible_hostname }},DNS:{{ ansible_fqdn }},DNS:{{ inventory_hostname }}"
    extended_key_usage:
      - clientAuth

- name: Pull CSR
  fetch:
    src: "{{ ca_ca_dir }}/{{ inventory_hostname }}.csr"
    dest: "{{ ca_localdir }}/{{ inventory_hostname }}.csr"
    flat: true

- name: Push CSR to CA host
  copy:
    src: "{{ ca_localdir }}/{{ inventory_hostname }}.csr"
    dest: "{{ ca_ca_dir }}/{{ inventory_hostname }}.csr"
    owner: root
    group: root
    mode: 0600
  delegate_to: "{{ ca_ca_host }}"

- name: Sign CSR with CA key
  openssl_certificate:
    path: "{{ ca_ca_dir }}/{{ inventory_hostname }}.crt"
    csr_path: "{{ ca_ca_dir }}/{{ inventory_hostname }}.csr"
    ownca_path: "{{ ca_ca_dir }}/ca.crt"
    ownca_privatekey_path: "{{ ca_ca_dir }}/ca.key"
    ownca_privatekey_passphrase: "{{ ca_ca_password }}"
    provider: ownca
  delegate_to: "{{ ca_ca_host }}"

- name: Fetch certificate
  fetch:
    src: "{{ ca_ca_dir }}/{{ inventory_hostname }}.crt"
    dest: "{{ ca_localdir }}/{{ inventory_hostname }}.crt"
    flat: true
  delegate_to: "{{ ca_ca_host }}"

- name: Push certificate to client
  copy:
    src: "{{ ca_localdir }}/{{ inventory_hostname }}.crt"
    dest: "{{ ca_ca_dir }}/{{ inventory_hostname }}.crt"
    owner: root
    group: root
    mode: 0600

- name: Fetch CA certificate
  fetch:
    src: "{{ ca_ca_dir }}/ca.crt"
    dest: "{{ ca_localdir }}/ca.crt"
    flat: true
  delegate_to: "{{ ca_ca_host }}"

- name: Push CA certificate to client
  copy:
    src: "{{ ca_localdir }}/ca.crt"
    dest: "{{ ca_ca_dir }}/ca.crt"
    owner: root
    group: root
    mode: 0600

### server certificate ###

- name: Create server certificate
  block:

  - name: Create server CSR
    openssl_csr:
      path: "{{ ca_ca_dir }}/{{ inventory_hostname }}-server.csr"
      privatekey_path: "{{ ca_ca_dir }}/{{ inventory_hostname }}.key"
      privatekey_passphrase: "{{ ca_keypassphrase }}"
      country_name: "{{ ca_country }}"
      organization_name: "{{ ca_organization }}"
      common_name: "{{ inventory_hostname }}"
      subject_alt_name: "DNS:{{ ansible_hostname }},DNS:{{ ansible_fqdn }},DNS:{{ inventory_hostname }}"
      extended_key_usage:
        - serverAuth

  - name: Pull server CSR
    fetch:
      src: "{{ ca_ca_dir }}/{{ inventory_hostname }}-server.csr"
      dest: "{{ ca_localdir }}/{{ inventory_hostname }}-server.csr"
      flat: true

  - name: Push server CSR to CA host
    copy:
      src: "{{ ca_localdir }}/{{ inventory_hostname }}-server.csr"
      dest: "{{ ca_ca_dir }}/{{ inventory_hostname }}-server.csr"
      owner: root
      group: root
      mode: 0600
    delegate_to: "{{ ca_ca_host }}"

  - name: Sign server CSR with CA key
    openssl_certificate:
      path: "{{ ca_ca_dir }}/{{ inventory_hostname }}-server.crt"
      csr_path: "{{ ca_ca_dir }}/{{ inventory_hostname }}-server.csr"
      ownca_path: "{{ ca_ca_dir }}/ca.crt"
      ownca_privatekey_path: "{{ ca_ca_dir }}/ca.key"
      ownca_privatekey_passphrase: "{{ ca_ca_password }}"
      provider: ownca
    delegate_to: "{{ ca_ca_host }}"

  - name: Fetch server certificate
    fetch:
      src: "{{ ca_ca_dir }}/{{ inventory_hostname }}-server.crt"
      dest: "{{ ca_localdir }}/{{ inventory_hostname }}-server.crt"
      flat: true
    delegate_to: "{{ ca_ca_host }}"

  - name: Push server certificate to client
    copy:
      src: "{{ ca_localdir }}/{{ inventory_hostname }}-server.crt"
      dest: "{{ ca_ca_dir }}/{{ inventory_hostname }}-server.crt"
      owner: root
      group: root
      mode: 0600

  - name: Create Logstash compatible key
    command: >
      openssl pkcs8
      -in {{ ca_ca_dir }}/{{ inventory_hostname }}.key
      -topk8
      -passin pass:{{ ca_keypassphrase }}
      -out {{ ca_ca_dir }}/{{ inventory_hostname }}-pkcs8.key
      -passout pass:{{ ca_keypassphrase }}
    args:
      creates: "{{ ca_ca_dir }}/{{ inventory_hostname }}-pkcs8.key"
    when: ca_logstash | bool

  when: ca_server_cert | bool
