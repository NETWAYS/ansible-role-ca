---

- name: Place CA configuration file
  template:
    src: ca.conf.j2
    dest: "{{ ca_ca_dir }}/ca.conf"
    owner: root
    group: root
    mode: 0600

- name: Check if CA key is already created
  stat:
    path: "{{ ca_ca_dir }}/ca.key"
  register: cakey

- name: Test and prepare key
  block:

    - name: Test CA key if present
      openssl_privatekey_info:
        path: "{{ ca_ca_dir }}/ca.key"
        passphrase: "{{ ca_ca_password }}"
      register: cakeyinfo
      failed_when: false

    - name: Prepare for new key
      block:

        - name: Move old key
          command: "mv {{ ca_ca_dir }}/ca.key {{ ca_ca_dir }}/ca.key.{{ ansible_date_time.iso8601 }}"
          args:
            creates: "{{ ca_ca_dir }}/ca.key.{{ ansible_date_time.iso8601 }}"

        - name: Move old certificate
          command: "mv {{ ca_ca_dir }}/ca.crt {{ ca_ca_dir }}/ca.crt.{{ ansible_date_time.iso8601 }}"
          args:
            creates: "{{ ca_ca_dir }}/ca.key.{{ ansible_date_time.iso8601 }}"

      when:
        - not cakeyinfo.can_parse_key | bool

  when: cakey.stat.exists

- name: Generate CA key
  command: >
    openssl genrsa
    -aes256
    -passout pass:{{ ca_ca_password }}
    -out {{ ca_ca_dir }}/ca.key
    {{ ca_ca_keylength }}
  args:
    creates: "{{ ca_ca_dir }}/ca.key"

- name: Generate CA certificate
  command: >
    openssl req
    -x509
    -new
    -nodes
    -key {{ ca_ca_dir }}/ca.key
    -passin pass:{{ ca_ca_password }}
    -sha256
    -days {{ ca_ca_days }}
    -out {{ ca_ca_dir }}/ca.crt
    -config {{ ca_ca_dir }}/ca.conf
  args:
    creates: "{{ ca_ca_dir }}/ca.crt"
