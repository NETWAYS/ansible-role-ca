---

- name: Place CA configuration file
  ansible.builtin.template:
    src: ca.conf.j2
    dest: "{{ ca_ca_dir }}/ca.conf"
    owner: root
    group: root
    mode: 0600

- name: Check if CA key is already created
  ansible.builtin.stat:
    path: "{{ ca_ca_dir }}/ca.key"
  register: cakey

- name: Test and prepare key
  when: cakey.stat.exists
  block:

    - name: Test CA key if present
      community.crypto.openssl_privatekey_info:
        path: "{{ ca_ca_dir }}/ca.key"
        passphrase: "{{ ca_ca_password }}"
      register: cakeyinfo
      failed_when: false

    - name: Prepare for new key
      when:
        - not cakeyinfo.can_parse_key | bool
      block:

        - name: Move old key
          ansible.builtin.command: >
            mv
            {{ ca_ca_dir }}/ca.key
            {{ ca_ca_dir }}/ca.key.{{ ansible_date_time.iso8601 }}
          args:
            creates: "{{ ca_ca_dir }}/ca.key.{{ ansible_date_time.iso8601 }}"

        - name: Move old certificate
          ansible.builtin.command: >
            mv
            {{ ca_ca_dir }}/ca.crt
            {{ ca_ca_dir }}/ca.crt.{{ ansible_date_time.iso8601 }}
          args:
            creates: "{{ ca_ca_dir }}/ca.key.{{ ansible_date_time.iso8601 }}"

- name: Generate CA key
  ansible.builtin.command: >
    openssl genrsa
    -aes256
    -passout pass:{{ ca_ca_password }}
    -out {{ ca_ca_dir }}/ca.key
    {{ ca_ca_keylength }}
  args:
    creates: "{{ ca_ca_dir }}/ca.key"

- name: Renew CA certificate
  when: ca_renew | bool
  block:

    - name: Check if CA certificate has to be renewed
      ansible.builtin.import_tasks: renew.yml
      vars:
        crt_path: "{{ ca_ca_dir }}/ca.crt"

    - name: Rotate expiring CA certificate
      ansible.builtin.command: >
        mv
        {{ ca_ca_dir }}/ca.crt
        {{ ca_ca_dir }}/ca.crt.{{ ansible_date_time.iso8601 }}
      changed_when: false
      when:
        - crt_exists.stat.exists | bool
        - not crt_info.valid_at.check_period | bool

    - name: Set ca_ca_renewed variable
      ansible.builtin.set_fact:
        ca_ca_renewed: "{{ not crt_info.valid_at.check_period }}"
      when: crt_exists.stat.exists | bool

- name: Generate CA certificate
  ansible.builtin.command: >
    openssl req
    -x509
    -new
    -nodes
    -key {{ ca_ca_dir }}/ca.key
    -passin pass:{{ ca_ca_password }}
    -sha256
    -days {{ ca_ca_days }}
    -out {{ ca_ca_dir }}/ca.crt
    -config {{ ca_ca_dir }}/ca.conf
  args:
    creates: "{{ ca_ca_dir }}/ca.crt"
